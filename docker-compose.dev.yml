services:
  web-dev:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=true
      - VITE_API_URL=http://backend-dev:3001
    depends_on:
      - backend-dev
    networks:
      - aws-app-dev-network

  backend-dev:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/backend/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:devpassword@postgres-dev:5432/aws_app_dev
      - REDIS_URL=redis://redis-dev:6379
      - JWT_SECRET=dev_jwt_secret_change_in_production_32chars
      - SESSION_SECRET=dev_session_secret_change_in_production_32chars
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - aws-app-dev-network

  postgres-dev:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: aws_app_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - aws-app-dev-network

  redis-dev:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - aws-app-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  aws-app-dev-network:
    driver: bridge
